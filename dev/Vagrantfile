

Vagrant.configure("2") do |config|
  # Use the same default insecure SSH key for both VMs (fine for lab use)
  config.ssh.insert_key = false

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  # --- node ---------------------------------------------------------------
  config.vm.define "node" do |node|
    node.vm.box = "bento/debian-13"
    node.vm.network "private_network", ip: "192.168.56.211", auto_config: true

    # shared folder for your app/code
    node.vm.synced_folder "./code", "/home/vagrant/code",
      create: true, group: "vagrant", owner: "vagrant"

    node.vm.provider "virtualbox" do |v|
      v.name   = "node"
      v.memory = 4096
      v.cpus   = 2
    end
  end

  # --- control ------------------------------------------------------------
  config.vm.define "control" do |control|
    control.vm.box = "bento/debian-13"
    control.vm.network "private_network", ip: "192.168.56.212", auto_config: true

     control.vm.synced_folder ".", "/home/vagrant/files", 
            create: true, group: "vagrant", owner: "vagrant", mount_options: ["dmode=755","fmode=755"]

    # for bdcli  
    control.vm.provision "shell", inline: "echo 'control' | sudo tee /etc/vagrant_role"  

    # Copy Vagrant's default insecure key *into control* so it can SSH to node
    control.vm.provision "file",
      source: "~/.vagrant.d/insecure_private_key",
      destination: "/home/vagrant/.ssh/vagrant_insecure_key"

    control.vm.provision "shell", inline: <<-SHELL
      chown vagrant:vagrant /home/vagrant/.ssh/vagrant_insecure_key
      chmod 600 /home/vagrant/.ssh/vagrant_insecure_key
    SHELL

    # Run your Ansible playbooks *inside control*
    control.vm.provision "ansible_local" do |ansible|
      ansible.provisioning_path = "/home/vagrant/files/vagrant"
      ansible.playbook          = "../vagrant_roles.yml"
      ansible.inventory_path    = "./hosts"
      ansible.verbose           = true
      ansible.limit             = "all"
    end

    control.vm.provision "ansible_local" do |ansible|
      ansible.provisioning_path = "/home/vagrant/files/vagrant"
      ansible.playbook          = "../vagrant.yml"
      ansible.inventory_path    = "./hosts"
      ansible.verbose           = true
      ansible.limit             = "all"
    end

    control.vm.provider "virtualbox" do |v|
      v.name   = "control"
      v.memory = 2048
      v.cpus   = 2
    end
  end
end
