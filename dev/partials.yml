

- name: set partial text
  set_fact:
    partial_text: "" 
- name: set partial filename
  set_fact:
    partial_file: "{{ compose_dir }}/docker-compose.partial.yml"  
- name: remix
  block:
    - name: create env dir
      file:
        path: "{{ code_dir }}/{{ use_project }}/env"
        state: directory
    - name: copy partial file
      copy:
        src: "{{ playbook_dir }}/env/templates/elib-cms/env/docker-partial.j2"
        dest: "{{ code_dir }}/{{ use_project }}/env/docker-partial.j2"
  when: operation == "qs" and template == "elib-cms"    
- name: detect services partial
  stat:
    path: "{{ control_code_dir }}/{{ use_project }}/env/docker-partial.j2"
  register: st
  delegate_to: control
- name: output stat
  debug:
    var: st
- name: populate docker-compose partial
  template:
    src: "{{ control_code_dir }}/{{ use_project }}/env/docker-partial.j2"
    dest: "{{ partial_file }}"
  when: st.stat.exists == true

- name: check for generated partials file
  stat:
    path: "{{ partial_file }}"
  register: partial_stat

- name: read partial from remote
  ansible.builtin.slurp:
    src: "{{ partial_file }}"
  register: partial_slurp
  when: partial_stat.stat.exists

- name: set partials contents
  ansible.builtin.set_fact:
    partial_text: "{{ partial_slurp.content | b64decode }}"
  when: partial_stat.stat.exists
  