
# "cb" - shortened codebase
---
- hosts: control
  vars:
    project_ini_string: "project section=Settings file={{ settings_dir }}/{{ settings_file }}"
    saved_project: "{{ lookup('ini', project_ini_string) }}"
    operation: "{{ (op is defined) | ternary(op, 'none') }}"
    project: "{{ (cb is defined) | ternary(cb, saved_project) }}"
  gather_facts: no
  tasks:
    - name: default
      block:
        - name: "show error"
          debug:
            msg: "No operation specified."
      when: operation == "none"
    - name: boot
      block:
        - name: install python docker
          pip:
            virtualenv: "{{ playbook_dir }}/python"
            name:
              - docker-compose
        - name: populate docker-compose
          template:
            src: "{{ playbook_dir }}/env/docker-compose.j2"
            dest: "{{ playbook_dir }}/docker-compose.yml"
        - name: boot containers
          docker_compose:
            project_src: "{{ playbook_dir }}"
            state: present
        - name: detect build
          stat:
            path: "{{ code_dir }}/{{ project }}/vendor"
          register: st
        - name: build
          shell: |
            docker exec -u www-data app ant
            docker exec -u www-data app php ./vendor/bin/empathy --set_docroot /var/www/project
            docker exec -u www-data app php ./vendor/bin/empathy --set_webroot www.dev.org
            docker exec -u www-data app php ./vendor/bin/empathy --set_publicdir ""
            docker exec -u www-data app php ./vendor/bin/empathy --misc tpl_cache
            docker exec -u www-data app php ./vendor/bin/empathy --set_dbserver db
            docker exec -u www-data app php ./vendor/bin/empathy --set_dbuser root
            docker exec -u www-data app php ./vendor/bin/empathy --set_dbpass example
            docker exec -u www-data app php ./vendor/bin/empathy --set_dbname project
          when: st.stat.exists == false
        - name: detect dump file
          stat:
            path: "{{ code_dir }}/{{ project }}/dump.sql"
          register: st
        - name: output stat
          debug:
            var: st
        - name: populate db (dump)
          command: "docker exec -u www-data app php ./vendor/bin/empathy --mysql populate"
          when: st.stat.exists == true
        - name: populate db (setup)
          command: "docker exec -u www-data app php ./vendor/bin/empathy --mysql setup"
          when: st.stat.exists == false
        - name: detect react dir
          stat:
            path: "{{ code_dir }}/{{ project }}/react"
          register: st
        - name: output stat
          debug:
            var: st
        - name: kill any pre-existing webpack dev server
          shell: "(killall node 2>/dev/null)"
          ignore_errors: yes
          when: st.stat.exists == true
        - name: run webpack
          shell: "(cd {{ code_dir }}/{{ project }}/react; npm run dev >> {{ playbook_dir }}/react.log 2>&1 &)"
          when: st.stat.exists == true
      when: operation == "boot"
    - name: switch
      block:
        - name: populate settings file
          template:
            src: "{{ playbook_dir }}/env/base-docker.j2"
            dest: "{{ settings_dir }}/{{ settings_file }}"
      when: operation == "switch"
