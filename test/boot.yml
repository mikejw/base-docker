

- hosts: control
  vars_files:
    - ~/.config/base-docker/settings.yml
  gather_facts: false
  tasks:
    - name: wait for ssh
      ansible.builtin.wait_for:
        host: "{{ hosts.test_ip }}"
        port: 22
        timeout: 120

- hosts: test
  gather_facts: false
  vars_files:
    - ~/.config/base-docker/settings.yml
  tasks:
    - name: set hostname
      command:
        cmd: "hostnamectl set-hostname {{ hosts.test_host }}"

- hosts: test
  gather_facts: true
  vars_files:
    - ~/.config/base-docker/settings.yml    
  tasks:
    - name: read encrypted values
      include_vars:
        file: "~/.config/base-docker/secrets.yml"
        name: secrets_vals
    - name: join tailscale network
      ansible.builtin.include_role:
        name: artis3n.tailscale.machine
      vars:
        tailscale_authkey: "{{ secrets_vals.ts_authkey }}"
    - name: install docker
      ansible.builtin.include_role:
        name: geerlingguy.docker
    - name: adding user to group docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
    - name: create jenkins mount dir
      file:
        path: "/home/{{ ansible_user }}/jenkins"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
    - name: create nginx-proxy vhost.d dir
      file:
        path: "/home/{{ ansible_user }}/vhost.d"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"     
    - name: create docker compose dir
      file:
        path: "/home/{{ ansible_user }}/docker"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
    - name: insert docker compose file
      template:
        src: "{{ playbook_dir }}/env/docker-compose.j2"
        dest: "/home/{{ ansible_user }}/docker/docker-compose.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
    - name: create nginx network
      community.docker.docker_network:
        name: nginx-proxy
        state: present
      become: true     

- hosts: test
  gather_facts: false
  vars_files:
    - ~/.config/base-docker/settings.yml    
  tasks:
    - name: pull docker images
      community.docker.docker_image:
        name: "{{ item }}"
        source: pull
        pull:
      loop:
        - registry.gitlab.com/mikejw/empathy/jenkins-gig:jdk17
        - tailscale/tailscale:latest
        - jwilder/nginx-proxy  


# <-- Snapshot 9

- hosts: test
  gather_facts: false
  vars_files:
    - ~/.config/base-docker/settings.yml    
  tasks:
    - name: run jenkins and proxy
      community.docker.docker_compose_v2:
        project_src: "/home/{{ ansible_user }}/docker"
        state: present
      #become: true
      register: compose_output
      no_log: false 
      changed_when: false
    - name: wait for tailscale service to appear
      shell: |
        tailscale status \
        | grep test-tailscale-nginx \
        | grep -Ev '\boffline$' \
        | awk '{print $1}'
      register: tailscale_ip
      changed_when: false
      retries: 30
      delay: 5
      until: tailscale_ip.stdout != ""   
    - name: output ip
      debug:
        msg: "Tailscale IP: {{ tailscale_ip.stdout }}"
    - name: detect jenkins unlock password
      stat:
        path: "/home/{{ ansible_user }}/jenkins/secrets/initialAdminPassword"
      register: st    
    - name: extract initial admin password
      shell: "cat /home/{{ ansible_user }}/jenkins/secrets/initialAdminPassword"
      register: jenkins_unlock_pw
      when: st.stat.exists == true    
    - name: output jenkins unlock password
      debug:
        msg: "Jenkins Unlock Password: {{ jenkins_unlock_pw.stdout | default('[UNLOCKED OR NOT BOOTED]') }}"    

